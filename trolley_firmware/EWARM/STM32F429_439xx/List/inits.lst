###############################################################################
#
# IAR ANSI C/C++ Compiler V8.50.1.245/W32 for ARM         26/Jan/2021  23:12:11
# Copyright 1999-2020 IAR Systems AB.
#
#    Cpu mode             
#    Endian            =  little
#    Source file       =  E:\github\trolley\trolley_firmware\user\inits.c
#    Command line      =
#        -f C:\Users\rudabo\AppData\Local\Temp\EW7B18.tmp
#        (E:\github\trolley\trolley_firmware\user\inits.c -D
#        USE_STDPERIPH_DRIVER -D STM32F401xx -D USE_HSE_BYPASS -lcN
#        E:\github\trolley\trolley_firmware\EWARM\STM32F429_439xx\List -o
#        E:\github\trolley\trolley_firmware\EWARM\STM32F429_439xx\Obj --debug
#        --endian=little --cpu=Cortex-M4 -e --fpu=VFPv4_sp --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.4\arm\inc\c\DLib_Config_Full.h" -I
#        E:\github\trolley\trolley_firmware\EWARM\..\ -I
#        E:\github\trolley\trolley_firmware\EWARM\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include\
#        -I E:\github\trolley\trolley_firmware\EWARM\..\user\ -I
#        E:\github\trolley\trolley_firmware\EWARM\..\Libraries\STM32F4xx_StdPeriph_Driver\inc\
#        -I
#        E:\github\trolley\trolley_firmware\EWARM\..\Utilities\STM32_EVAL\Common\
#        -Ohz --use_c++_inline --require_prototypes -I "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 8.4\arm\CMSIS\Core\Include\" -I
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.4\arm\CMSIS\DSP\Include\")
#    Locale            =  C
#    List file         =
#        E:\github\trolley\trolley_firmware\EWARM\STM32F429_439xx\List\inits.lst
#    Object file       =
#        E:\github\trolley\trolley_firmware\EWARM\STM32F429_439xx\Obj\inits.o
#    Runtime model:       
#      __SystemLibrary =  DLib
#      __dlib_version  =  6
#
###############################################################################

E:\github\trolley\trolley_firmware\user\inits.c
      1          #include "stm32f4xx.h"
      2          #include "inits.h"
      3          #include "modbus.h"
      4          #include "mb_regs.h"
      5          #include "main.h"
      6          
      7          GPIO_InitTypeDef GPIO_InitStructure;
      8          
      9          void init_gpio(void)
     10          {
     11          
     12          
     13          }
     14          
     15          
     16          
     17          #define USARTy_MB                USART1
     18          #define USARTy_MB_IRQ            USART1_IRQn
     19          #define USARTy_Tx_DMA_Channel    DMA1_Channel7
     20          #define USARTy_Tx_DMA_FLAG       DMA1_FLAG_TC4
     21          #define USARTy_DR_Base           0x40013804
     22          
     23          void init_modbus(uint32_t speed)
     24          {
     25            GPIO_InitTypeDef GPIO_InitStructure;
     26            DMA_InitTypeDef DMA_InitStructure;
     27            USART_InitTypeDef USART_InitStructure;
     28              
     29            USARTx_CLK_INIT(USARTx_CLK, ENABLE);
     30            RCC_AHB1PeriphClockCmd(USARTx_DMAx_CLK, ENABLE);
     31            
     32            GPIO_PinAFConfig(USARTx_TX_GPIO_PORT, USARTx_TX_SOURCE, USARTx_TX_AF);
     33            GPIO_PinAFConfig(USARTx_RX_GPIO_PORT, USARTx_RX_SOURCE, USARTx_RX_AF);
     34            
     35            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
     36            GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
     37            GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
     38            GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
     39            
     40            GPIO_InitStructure.GPIO_Pin = USARTx_TX_PIN;
     41            GPIO_Init(USARTx_TX_GPIO_PORT, &GPIO_InitStructure);
     42            
     43            GPIO_InitStructure.GPIO_Pin = USARTx_RX_PIN;
     44            GPIO_Init(USARTx_RX_GPIO_PORT, &GPIO_InitStructure);
     45            
     46            USART_InitStructure.USART_BaudRate = speed;
     47            USART_InitStructure.USART_WordLength = USART_WordLength_8b;
     48            USART_InitStructure.USART_StopBits = USART_StopBits_1;
     49            /* When using Parity the word length must be configured to 9 bits */
     50            USART_InitStructure.USART_Parity = USART_Parity_No;
     51            USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
     52            USART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
     53            USART_Init(USARTx, &USART_InitStructure);
     54            
     55            //DMA init
     56            DMA_InitStructure.DMA_BufferSize = REGISTERS_SIZE ;
     57            DMA_InitStructure.DMA_FIFOMode = DMA_FIFOMode_Disable ;
     58            DMA_InitStructure.DMA_FIFOThreshold = DMA_FIFOThreshold_1QuarterFull ;
     59            DMA_InitStructure.DMA_MemoryBurst = DMA_MemoryBurst_Single ;
     60            DMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_Byte;
     61            DMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable;
     62            DMA_InitStructure.DMA_Mode = DMA_Mode_Normal;
     63            DMA_InitStructure.DMA_PeripheralBaseAddr =(uint32_t) (&(USARTx->DR)) ;
     64            DMA_InitStructure.DMA_PeripheralBurst = DMA_PeripheralBurst_Single;
     65            DMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_Byte;
     66            DMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
     67            DMA_InitStructure.DMA_Priority = DMA_Priority_High;
     68            /* Configure TX DMA */
     69            DMA_InitStructure.DMA_Channel = USARTx_TX_DMA_CHANNEL ;
     70            DMA_InitStructure.DMA_DIR = DMA_DIR_MemoryToPeripheral ;
     71            DMA_InitStructure.DMA_Memory0BaseAddr =(uint32_t)mb.u8BufferOut ;
     72            DMA_Init(USARTx_TX_DMA_STREAM,&DMA_InitStructure);
     73            /* Configure RX DMA */
     74            DMA_InitStructure.DMA_Channel = USARTx_RX_DMA_CHANNEL ;
     75            DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralToMemory ;
     76            DMA_InitStructure.DMA_Memory0BaseAddr =(uint32_t)mb.u8BufferIn ; 
     77            DMA_Init(USARTx_RX_DMA_STREAM,&DMA_InitStructure);
     78            
     79            USART_Cmd(USARTx, ENABLE);  
     80            mb.u8regsize = REGISTERS_SIZE;
     81          }
     82          
     83          /*void init_ppm(void)
     84          {
     85            NVIC_InitTypeDef NVIC_InitStructure;  
     86            #define TIM_PPM TIM4
     87            GPIO_InitTypeDef GPIO_InitStructure;
     88            TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;
     89            TIM_OCInitTypeDef  TIM_OCInitStructure;  
     90              
     91            RCC_AHBPeriphClockCmd(RCC_AHBPeriph_DMA1, ENABLE);
     92            RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB | RCC_APB2Periph_AFIO, ENABLE);
     93            RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM4, ENABLE);
     94            
     95            //GPIO_PinRemapConfig(GPIO_FullRemap_TIM3, ENABLE);	
     96            
     97            GPIO_InitStructure.GPIO_Pin = GPIO_Pin_6 | GPIO_Pin_7 | GPIO_Pin_8 | GPIO_Pin_9;
     98            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_OD;
     99            GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
    100            GPIO_Init(GPIOB, &GPIO_InitStructure);
    101            
    102            GPIO_InitStructure.GPIO_Pin = GPIO_Pin_5;
    103            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_OD;
    104            GPIO_Init(GPIOB, &GPIO_InitStructure);  
    105            GPIO_WriteBit(GPIOB, GPIO_Pin_5, !mb.registers.one[mbREG_PPM_PON]);  
    106            
    107            uint16_t PrescalerValue = (uint16_t) (SystemCoreClock / 100000) - 1;
    108            TIM_TimeBaseStructure.TIM_Period = 2000;    //(1/speed)/(1/timeout)*4
    109            TIM_TimeBaseStructure.TIM_Prescaler = PrescalerValue;
    110            TIM_TimeBaseStructure.TIM_ClockDivision = 0;
    111            TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;
    112            TIM_TimeBaseInit(TIM_PPM, &TIM_TimeBaseStructure);
    113            
    114            TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1;
    115            TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
    116            TIM_OCInitStructure.TIM_Pulse = 150;
    117            TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High;
    118            TIM_OC1Init(TIM_PPM, &TIM_OCInitStructure);
    119            
    120            TIM_OC2Init(TIM_PPM, &TIM_OCInitStructure);
    121            
    122            TIM_OC3Init(TIM_PPM, &TIM_OCInitStructure);
    123            
    124            TIM_OC4Init(TIM_PPM, &TIM_OCInitStructure);
    125          
    126            TIM_OC1PreloadConfig(TIM_PPM, TIM_OCPreload_Enable);
    127          
    128            TIM_ARRPreloadConfig(TIM_PPM, ENABLE);
    129            TIM_ITConfig(TIM_PPM, TIM_IT_Update, ENABLE);
    130            
    131            TIM_Cmd(TIM_PPM, ENABLE);
    132            
    133            NVIC_InitStructure.NVIC_IRQChannel = TIM4_IRQn;
    134            NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 1;
    135            NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
    136            NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
    137            NVIC_Init(&NVIC_InitStructure);  
    138            
    139            //PPM input
    140            GPIO_InitStructure.GPIO_Pin = GPIO_Pin_10 | GPIO_Pin_11 | GPIO_Pin_15;
    141            GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
    142            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;
    143            GPIO_Init(GPIOB, &GPIO_InitStructure);
    144            
    145            EXTI_InitTypeDef exti;
    146            exti.EXTI_Line = EXTI_Line10;
    147            exti.EXTI_Mode = EXTI_Mode_Interrupt;
    148            exti.EXTI_Trigger = EXTI_Trigger_Rising_Falling;
    149            exti.EXTI_LineCmd = ENABLE;
    150            EXTI_Init(&exti);
    151            GPIO_EXTILineConfig(GPIO_PortSourceGPIOB, GPIO_PinSource10);
    152            
    153            exti.EXTI_Line = EXTI_Line11;
    154            exti.EXTI_Mode = EXTI_Mode_Interrupt;
    155            exti.EXTI_Trigger = EXTI_Trigger_Rising_Falling;
    156            exti.EXTI_LineCmd = ENABLE;
    157            EXTI_Init(&exti);
    158            GPIO_EXTILineConfig(GPIO_PortSourceGPIOB, GPIO_PinSource11);
    159            
    160            exti.EXTI_Line = EXTI_Line12;
    161            exti.EXTI_Mode = EXTI_Mode_Interrupt;
    162            exti.EXTI_Trigger = EXTI_Trigger_Rising_Falling;
    163            exti.EXTI_LineCmd = ENABLE;
    164            EXTI_Init(&exti);  
    165            GPIO_EXTILineConfig(GPIO_PortSourceGPIOB, GPIO_PinSource12);
    166            NVIC_InitStructure.NVIC_IRQChannel = EXTI15_10_IRQn;
    167            NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 2;
    168            NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
    169            NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
    170            NVIC_Init(&NVIC_InitStructure); 
    171          }
    172          */
    173          
    174          
    175          
    176          
    177          
    178          
    179          
    180          
    181          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   init_gpio
     104   init_modbus
       104   -> DMA_Init
       104   -> GPIO_Init
       104   -> GPIO_PinAFConfig
       104   -> RCC_AHB1PeriphClockCmd
       104   -> RCC_APB1PeriphClockCmd
       104   -> USART_Cmd
       104   -> USART_Init


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       8  GPIO_InitStructure
       2  init_gpio
     228  init_modbus

 
   8 bytes in section .bss
 254 bytes in section .text
 
 254 bytes of CODE memory
   8 bytes of DATA memory

Errors: none
Warnings: none
