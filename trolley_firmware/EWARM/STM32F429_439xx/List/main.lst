###############################################################################
#
# IAR ANSI C/C++ Compiler V8.50.1.245/W32 for ARM         26/Jan/2021  23:56:56
# Copyright 1999-2020 IAR Systems AB.
#
#    Cpu mode             
#    Endian            =  little
#    Source file       =  E:\github\trolley\trolley_firmware\user\main.c
#    Command line      =
#        -f C:\Users\rudabo\AppData\Local\Temp\EW75D7.tmp
#        (E:\github\trolley\trolley_firmware\user\main.c -D
#        USE_STDPERIPH_DRIVER -D STM32F401xx -D USE_HSE_BYPASS -lcN
#        E:\github\trolley\trolley_firmware\EWARM\STM32F429_439xx\List -o
#        E:\github\trolley\trolley_firmware\EWARM\STM32F429_439xx\Obj --debug
#        --endian=little --cpu=Cortex-M4 -e --fpu=VFPv4_sp --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.4\arm\inc\c\DLib_Config_Full.h" -I
#        E:\github\trolley\trolley_firmware\EWARM\..\ -I
#        E:\github\trolley\trolley_firmware\EWARM\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include\
#        -I E:\github\trolley\trolley_firmware\EWARM\..\user\ -I
#        E:\github\trolley\trolley_firmware\EWARM\..\Libraries\STM32F4xx_StdPeriph_Driver\inc\
#        -I
#        E:\github\trolley\trolley_firmware\EWARM\..\Utilities\STM32_EVAL\Common\
#        -Ohz --use_c++_inline --require_prototypes -I "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 8.4\arm\CMSIS\Core\Include\" -I
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.4\arm\CMSIS\DSP\Include\")
#    Locale            =  C
#    List file         =
#        E:\github\trolley\trolley_firmware\EWARM\STM32F429_439xx\List\main.lst
#    Object file       =
#        E:\github\trolley\trolley_firmware\EWARM\STM32F429_439xx\Obj\main.o
#    Runtime model:       
#      __SystemLibrary =  DLib
#      __dlib_version  =  6
#
###############################################################################

E:\github\trolley\trolley_firmware\user\main.c
      1          /* Includes ------------------------------------------------------------------*/
      2          #include "main.h"
      3          #include "inits.h"
      4          #include "modbus.h"
      5          
      6          static __IO uint32_t uwTimingDelay;
      7          RCC_ClocksTypeDef RCC_Clocks;
      8          
      9          /* Private function prototypes -----------------------------------------------*/
     10          static void Delay(__IO uint32_t nTime);
     11          
     12          /* Private functions ---------------------------------------------------------*/
     13          
     14          /**
     15            * @brief  Main program
     16            * @param  None
     17            * @retval None
     18            */
     19            volatile uint8_t lol = 0;
     20          int main(void)
     21          {
     22            GPIO_InitTypeDef GPIO_InitStructure;
     23            //SysTick end of count event each 10ms
     24            RCC_GetClocksFreq(&RCC_Clocks);
     25            SysTick_Config(RCC_Clocks.HCLK_Frequency / 1000);
     26            
     27            //Insert 50 ms delay
     28            Delay(50);
     29            
     30            RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA, ENABLE);
     31            
     32            GPIO_InitStructure.GPIO_Pin = GPIO_Pin_5;
     33            GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
     34            GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
     35            GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;  
     36            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
     37            GPIO_Init(GPIOA, &GPIO_InitStructure);
     38            GPIO_WriteBit(GPIOA, GPIO_Pin_5, Bit_SET);
     39            
     40            
     41            init_modbus(115200);   
     42            uint8_t toggle = 0;
     43                GPIO_WriteBit(GPIOA, GPIO_Pin_5, Bit_RESET);
     44            for (uint8_t cnt = 0; cnt < 10; cnt++)
     45              mb.u8BufferOut[cnt] = cnt + 'a';
     46            while (1)
     47            {
     48              
     49              /*if (toggle)
     50                toggle = 0;
     51              else
     52                toggle = 1;*/
     53              
     54              Delay(500);
     55              DMA_ClearFlag(USARTx_TX_DMA_STREAM,USARTx_TX_DMA_FLAG_TCIF);
     56              USART_ClearFlag(USARTx,USART_FLAG_TC); 
     57              DMA_SetCurrDataCounter(USARTx_TX_DMA_STREAM, 10);
     58              DMA_Cmd(USARTx_TX_DMA_STREAM, ENABLE);
     59              /*USART_DMACmd(USARTx, USART_DMAReq_Rx, ENABLE);
     60              */
     61              GPIO_WriteBit(GPIOA, GPIO_Pin_5, Bit_SET);
     62              Delay(50);
     63              GPIO_WriteBit(GPIOA, GPIO_Pin_5, Bit_RESET);
     64              
     65              /*if (USART2->SR & USART_FLAG_RXNE)
     66              {
     67                lol = USART2->DR;
     68                if (USART2->SR & USART_FLAG_TXE)
     69                {
     70                  USART2->DR = lol;  
     71                  while ((USART2->SR & USART_FLAG_TC) == 0);
     72                }
     73                
     74                lol++;
     75                GPIO_WriteBit(GPIOA, GPIO_Pin_5, Bit_SET);
     76                Delay(50);
     77                GPIO_WriteBit(GPIOA, GPIO_Pin_5, Bit_RESET);
     78              }*/
     79            }
     80          }
     81          
     82          void Delay(__IO uint32_t nTime)
     83          { 
     84            uwTimingDelay = nTime;
     85          
     86            while(uwTimingDelay != 0);
     87          }
     88          
     89          /**
     90            * @brief  Decrements the TimingDelay variable.
     91            * @param  None
     92            * @retval None
     93            */
     94          void TimingDelay_Decrement(void)
     95          {
     96            if (uwTimingDelay != 0x00)
     97            { 
     98              uwTimingDelay--;
     99            }
    100          }
    101          
    102          #ifdef  USE_FULL_ASSERT
    103          
    104          /**
    105            * @brief  Reports the name of the source file and the source line number
    106            *         where the assert_param error has occurred.
    107            * @param  file: pointer to the source file name
    108            * @param  line: assert_param error line source number
    109            * @retval None
    110            */
    111          void assert_failed(uint8_t* file, uint32_t line)
    112          { 
    113            /* User can add his own implementation to report the file name and line number,
    114               ex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
    115          
    116            /* Infinite loop */
    117            while (1)
    118            {
    119            }
    120          }
    121          #endif
    122          
    123          /**
    124            * @}
    125            */
    126          
    127          
    128          /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   TimingDelay_Decrement
      32   main
        32   -> DMA_ClearFlag
        32   -> DMA_Cmd
        32   -> DMA_SetCurrDataCounter
        32   -> GPIO_Init
        32   -> GPIO_WriteBit
        32   -> RCC_AHB1PeriphClockCmd
        32   -> RCC_GetClocksFreq
        32   -> USART_ClearFlag
        32   -> init_modbus


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
       4  ??DataTable1_7
      10  ?Subroutine0
      14  ?Subroutine1
      20  RCC_Clocks
          uwTimingDelay
      14  TimingDelay_Decrement
       1  lol
     196  main

 
  21 bytes in section .bss
 266 bytes in section .text
 
 266 bytes of CODE memory
  21 bytes of DATA memory

Errors: none
Warnings: 1
